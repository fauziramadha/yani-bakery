import React, { useEffect, useState } from 'react';
import { initializeApp } from 'firebase/app';
import { getFirestore, collection, query, orderBy, onSnapshot, addDoc } from 'firebase/firestore';
import { firebaseConfig } from './firebaseConfig';
const app = initializeApp(firebaseConfig);
const db = getFirestore(app);
export default function App(){ const [products,setProducts]=useState([]); const [selected,setSelected]=useState(null); const [form,setForm]=useState({name:'',phone:'',quantity:1,orderDate:'',pickupDate:'',paymentMethod:'DANA',address:''}); useEffect(()=>{ const q=query(collection(db,'products'),orderBy('createdAt','asc')); const unsub=onSnapshot(q,snap=>{ const items=[]; snap.forEach(d=>items.push({id:d.id,...d.data()})); setProducts(items); }); return ()=>unsub(); },[]); const open=(p)=>{ setSelected(p); const today=new Date().toISOString().slice(0,10); const tomorrow=new Date(Date.now()+24*60*60*1000).toISOString().slice(0,10); setForm({...form,productId:p.id,quantity:1,orderDate:today,pickupDate:tomorrow}); }; const submit=async()=>{ if(!selected) return; if(form.quantity>selected.stock){ alert('Stok tidak cukup'); return; } const order={...form,productName:selected.name,paymentStatus:'pending',createdAt:new Date()}; await addDoc(collection(db,'orders'),order); alert('Order terkirim!'); setSelected(null); }; return (<div className='container'><header className='header'><h1>La Petite Boulangerie - Shop</h1></header><section className='grid'>{products.map(p=>(<article key={p.id} className='card' onClick={()=> p.stock>0 && open(p)}><img src={p.image} alt=''/><h3>{p.name}</h3><p>Rp {p.price}</p><p>{p.stock>0?`${p.stock} available`:'SOLD OUT'}</p></article>))}</section>{selected && (<div className='modal-backdrop'><div className='modal'><div style={{display:'flex',gap:12}}><img src={selected.image} style={{width:220,height:180,objectFit:'cover'}}/><div style={{flex:1}}><h2>{selected.name}</h2><p>Rp {selected.price}</p><label>Jumlah</label><input type='number' min='1' max={selected.stock} value={form.quantity} onChange={e=>setForm({...form,quantity:Number(e.target.value)})}/><input placeholder='Nama' value={form.name} onChange={e=>setForm({...form,name:e.target.value})}/><input placeholder='No HP' value={form.phone} onChange={e=>setForm({...form,phone:e.target.value})}/><input placeholder='Alamat' value={form.address} onChange={e=>setForm({...form,address:e.target.value})}/><div style={{marginTop:8}}><button className='button' onClick={()=>{ if(confirm('Apakah kamu yakin untuk melanjutkan orderan ini?')) submit();}}>Lanjut</button><button onClick={()=>setSelected(null)}>Batal</button></div></div></div></div></div>)}<footer className='footer'>Â© La Petite Boulangerie</footer></div>); }